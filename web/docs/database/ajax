This is an overview of the [http://jquery.com/src/ajax/ajax-latest.js new AJAX plugin]. The plugin itself provides basic HTML and XML retreival functionality. It is especially designed to cover most common use cases for Javascript developers, to remove their dependancies on popular, bloated, AJAX libraries.

Some *[http://jquery.com/demo/ajax/ AJAX Plugin Demos]* are available, if you're curious as to how the plugin works in a real situtation.

==== load(URI)

This method retreives the HTML file located at the specified URL and loads it into the matching elements. This technique is commonly referred to as [http://microformats.org/wiki/rest/ahah AHAH].

  $("p").load("/test/ajax-test.html");

----

==== load(URI,Params,Callback)

There are two optional methods to the load method, Params and Callback. Either one is optional, so it's perfectly valid to call the function like: load(URI,Callback). These two parameters provide the ability to send a POST request to a server (Params) or receive notification whenever the file has finished loading (Callback).

The following is an example of how you could use the Params argument to pass additional information to a dynamic script.

  $("p").load("test.cgi",{
    name: "John",
    address: "123 Main St."
  });

The following is an example of waiting for notification whenever the file has been loaded, using the Callback parameter.

  $("p").hide("fast");
  $("p").load("/test/ajax-test.html",function(){
    $("p").show("fast");
  });

=== Helper Functions

The following functions can be used to dynamically load XML documents, which can then be processed using a typical jQuery $() function. These functions are very lightweight and can be considered a good replacement for a library, such as, [http://mad4milk.net/entry/moo.ajax Moo AJAX].

==== $.get(URI,Callback)

This method is capable of querying the specified URI and returning the resulting XML document to the specified Callback function.

  $.get("/test/ajax-test.xml",function(xml){
    alert( $("title",xml).text() );
  });

----

==== $.post(URI,Params,Callback)

This method is very similar to the $.get function but allows for additional parameter data to be passed as a POST request.

  $.post("test.cgi",{
    name: "John",
    address: "123 Main St."
  },function(xml){
    alert( $("title",xml).text() );
  });
